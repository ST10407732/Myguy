@{
    ViewData["Title"] = "Task Details";
}

<h1>Task Details</h1>

<!-- Map for client to track driver -->
<div id="map"></div>

<!-- Loading Spinner -->
<div id="loadingSpinner" class="loading-spinner" style="display: none;">
    <div class="spinner"></div>
    <p>Tracking driver...</p>
</div>

<!-- Progress Bar -->
<div class="progress" style="display: none;">
    <div id="progressBar" class="progress-bar" role="progressbar" style="width: 0%" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
</div>

<!-- Error Message for tracking failure -->
<div id="errorMessage" style="display: none; color: red;">
    <p>Driver can't be tracked.</p>
</div>

<!-- External Libraries -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.6/signalr.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.3/leaflet.js"></script>

<script>
    let trackingTimeout;

    // Show the loading spinner when trying to track the driver
    function showLoading() {
        document.getElementById("loadingSpinner").style.display = "block";  // Show the spinner
        document.getElementById("progressBar").style.width = "0%"; // Reset progress bar
        document.querySelector(".progress").style.display = "block";  // Show the progress bar
        // Set timeout to display error if location can't be fetched in 10 seconds
        trackingTimeout = setTimeout(function () {
            document.getElementById("loadingSpinner").style.display = "none";  // Hide the spinner
            document.getElementById("errorMessage").style.display = "block";  // Show error message
        }, 10000);  // 10 seconds timeout
    }

    // Hide the loading spinner and error message
    function hideLoading() {
        clearTimeout(trackingTimeout);  // Clear the timeout if location is found
        document.getElementById("loadingSpinner").style.display = "none";  // Hide the spinner
        document.getElementById("errorMessage").style.display = "none";  // Hide the error message
        document.querySelector(".progress").style.display = "none";  // Hide the progress bar
    }

    // Update progress bar while waiting for updates
    function updateProgressBar(progress) {
        document.getElementById("progressBar").style.width = progress + "%";
    }

    // SignalR connection setup
    const connection = new signalR.HubConnectionBuilder().withUrl("/locationHub").build();

    // Listen for location updates from SignalR
    connection.on("ReceiveDriverLocation", function (data) {
        console.log("Driver Location Update: ", data);

        // Hide loading spinner once we receive the driver's location
        hideLoading();
        // Update map or location display here
        // Example: updateMap(data.driverLatitude, data.driverLongitude);
    });

    // Start SignalR connection
    connection.start().then(function () {
        console.log("SignalR connection established.");
        updateProgressBar(50);  // 50% progress while connecting to SignalR
    }).catch(function (err) {
        return console.error(err.toString());
    });

    // Function to update the driver's location
    function sendLocationUpdate() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (position) {
                const latitude = position.coords.latitude;
                const longitude = position.coords.longitude;

                // Show loading spinner until location is sent
                showLoading();

                // Send the updated location to the server
                fetch("/account/updatelocation", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({
                        driverLatitude: latitude,
                        driverLongitude: longitude
                    })
                }).then(response => {
                    if (response.ok) {
                        console.log('Location sent successfully');
                        updateProgressBar(100);  // Update progress bar to 100% after sending location
                    } else {
                        console.error('Failed to send location');
                        updateProgressBar(0);  // Reset progress if failed
                    }
                }).catch(error => {
                    console.error('Error sending location:', error);
                    updateProgressBar(0);  // Reset progress if error
                });
            }, function () {
                console.error("Unable to retrieve your location.");
                hideLoading();
                document.getElementById("errorMessage").style.display = "block";  // Show error if location cannot be retrieved
            });
        } else {
            alert("Geolocation is not supported by this browser.");
        }
    }

    // Call this function every 5 seconds to update the location
    setInterval(function () {
        sendLocationUpdate();
    }, 5000);  // Update every 5 seconds
</script>

<!-- Styles for the progress bar and spinner -->
<style>
    #map {
        height: 500px;
        width: 100%;
        border: 1px solid #ccc;
    }

    /* Loading Spinner */
    .loading-spinner {
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        text-align: center;
        padding: 20px;
    }

    .spinner {
        border: 8px solid #f3f3f3; /* Light grey */
        border-top: 8px solid #3498db; /* Blue */
        border-radius: 50%;
        width: 50px;
        height: 50px;
        animation: spin 2s linear infinite; /* Continuous animation */
    }

    /* Progress Bar */
    .progress {
        margin-top: 20px;
        height: 20px;
    }

    .progress-bar {
        background-color: #4caf50;
        height: 100%;
    }

    /* Error Message */
    #errorMessage {
        color: red;
        font-size: 16px;
        text-align: center;
    }
</style>
