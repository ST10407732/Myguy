@model MYGUYY.Models.TaskRequest
@{
    ViewData["Title"] = "Track Driver Location";
}

<h2>Track Driver Location</h2>

<div class="container mt-4">
    <!-- Map Container -->
    <div id="map" style="height: 500px; width: 100%; position: relative;"></div>

    <!-- Tracking Controls -->
    <div class="mt-4">
        <button class="btn btn-danger" id="stopTracking" style="display: none;">Stop Tracking</button>
    </div>

    <!-- Error Message -->
    <div id="errorMessage" style="display: none; color: red;">
        <p>Driver can't be tracked. Please try again later.</p>
    </div>
</div>

<!-- External Libraries -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBx_0EotM86ynL6i5HcHB6LsZOAWQIUpJM&libraries=places&callback=initMap" async defer></script>

<!-- Load Google Maps API -->

<script>
    function initMap() {
        // Initialize the map centered at a default location
        const map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: -25.7479, lng: 28.2293 }, // Default location (Pretoria)
            zoom: 13
        });

        let driverMarker = null;

        // SignalR connection setup
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/locationHub")
            .build();

        connection.start()
            .then(() => {
                console.log('Connected to SignalR');
                connection.invoke("JoinTaskGroup", @Model.Id)
                    .catch(err => console.error("Error joining group", err));
            })
            .catch(err => {
                console.error('Connection failed', err);
                document.getElementById("errorMessage").style.display = "block";
            });

        connection.on("ReceiveDriverLocation", (location) => {
            const { Latitude, Longitude } = location;

            if (!driverMarker) {
                driverMarker = new google.maps.Marker({
                    position: { lat: Latitude, lng: Longitude },
                    map: map,
                    icon: 'https://maps.google.com/mapfiles/kml/shapes/truck.png',
                    title: 'Driver Location'
                });
            } else {
                driverMarker.setPosition({ lat: Latitude, lng: Longitude });
            }

            map.setCenter({ lat: Latitude, lng: Longitude });
        });

        document.getElementById("stopTracking").addEventListener("click", async () => {
            try {
                await connection.invoke("LeaveTaskGroup", @Model.Id);
                connection.stop();
                document.getElementById("stopTracking").style.display = "none";
                alert("Tracking stopped.");
            } catch (err) {
                console.error("Error stopping tracking", err);
                alert("Error stopping tracking.");
            }
        });
    }
</script>

<!-- Styles for better appearance -->
<style>
    #map {
        height: 500px;
        width: 100%;
        border: 1px solid #ccc;
        position: relative;
    }

    button {
        background-color: #4CAF50;
        color: white;
        padding: 10px 20px;
        border: none;
        cursor: pointer;
        border-radius: 5px;
    }

        button:hover {
            background-color: #45a049;
        }

    .btn-danger {
        background-color: #dc3545;
    }

        .btn-danger:hover {
            background-color: #c82333;
        }
</style>
