@model TaskRequest

@{
    ViewData["Title"] = "Track Driver";
}

<h1>Tracking Driver Location for Task: @Model.Description</h1>

<div id="map" style="width: 100%; height: 400px;"></div>

<script src="https://maps.googleapis.com/maps/api/js?key=YOUR_GOOGLE_MAPS_API_KEY&callback=initMap&v=weekly" async></script>

<script>
    var map;
    var driverMarker;

    function initMap() {
        var taskLocation = { lat: @Model.PickupLatitude, lng: @Model.PickupLongitude };
        map = new google.maps.Map(document.getElementById("map"), {
            zoom: 12,
            center: taskLocation,
        });

        driverMarker = new google.maps.Marker({
            position: taskLocation,
            map: map,
            title: 'Driver Location'
        });

        // Now, listen for real-time updates via SignalR
        const connection = new signalR.HubConnectionBuilder().withUrl("/locationHub").build();

        connection.on("ReceiveDriverLocation", function (data) {
            var updatedLocation = { lat: data.Latitude, lng: data.Longitude };
            driverMarker.setPosition(updatedLocation);
            map.setCenter(updatedLocation);
        });

        connection.start().then(function () {
            connection.invoke("JoinTaskGroup", @Model.Id);
        }).catch(function (err) {
            return console.error(err.toString());
        });
    }
</script>
